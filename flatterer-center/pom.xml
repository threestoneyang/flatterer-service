<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>flatterer-service</artifactId>
        <groupId>com.stone</groupId>
        <version>1.0.0.RELEASE</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>flatterer-center</artifactId>
    <properties>
        <hystrix.version>1.5.12</hystrix.version>
    </properties>
    <dependencies>
        <!--增加eureka-server的依赖-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-netflix-eureka-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter</artifactId>
        </dependency>
    </dependencies>
 <build>
		<!-- <resources> <resource> <directory>src/main/java</directory> <includes> 
			<include>**/*.xml</include> </includes> </resource> <resource> <directory>src/main/resources</directory> 
			<includes> <include>**.*</include> <include>**/*.*</include>i18n能读取到 <include>**/*/*.*</include> 
			</includes> </resource> </resources> -->
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>

				<configuration>
					<fork>true</fork> <!-- 如果没有该配置，devtools不会生效 -->
					<!-- 指定该Main Class为全局的唯一入口 -->
					<mainClass>com.stone.flatterservice.App</mainClass>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal><!--可以把依赖的包都打包到生成的Jar包中 -->
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
    <version>1.0.4-SNAPSHOT</version>
</project>