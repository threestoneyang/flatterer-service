spring:
  profiles:
    active: dev
  application:
    name: flatterer-manage
  jackson:
      date-format: yyyy-MM-dd HH:mm:ss
      time-zone: GMT+8
server:
  servlet:
    context-path: /${spring.application.name}
  port: 11200
eureka:
  instance:
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 15
    leaseRenewalIntervalInSeconds: 10
    metadata-map:
      management: 
        context-path: ${server.servlet.context-path}/actuator
    home-page-url-path: ${server.servlet.context-path}
    health-check-url-path: ${server.servlet.context-path}/actuator/health
    status-page-url-path: ${server.servlet.context-path}/actuator/info
    prefer-ip-address: true
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
      health:
        show-details: ALWAYS
logging:
  level:
    com.stone.flatterservice: DEBUG
mybatis:
  mapper-locations: classpath*:mapper/**/*.xml #这里是mapper的配置文件
  type-aliases-package: com.stone.flatterservice.pojo.* #这里是实体类的包
  configuration:  
     map-underscore-to-camel-case: true
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 120000
  ConnectTimeout: 120000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 0
  OkToRetryOnAllOperations: false
  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
hystrix:
  threadpool:
    default:
      coreSize: 1000
      maxQueueSize: 1000
      queueSizeRejectionThreshold: 500
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 300000
